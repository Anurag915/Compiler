anurag@ANURAG:/mnt/d/Project/PythonCompiler$ python3 compiler.py test.py
Generating LALR tables
WARNING: 50 shift/reduce conflicts
Source Code:
----------------------------------------
n = 17
isPrime = 1
for ( i = 2; i < n; i = i + 1 ) if ( n % i == 0 ) isPrime = 0
if ( isPrime == 1 ) print("Prime") else print("Not a prime")

----------------------------------------
Syntax error
Initial IR Code:
n = 17
isPrime = 1
i = 2
t0 = 2 < 17
t1 = 2 + 1
i = t1
t2 = t1 == 0
t3 = 17 % t2
isPrime = 0
if not t3 goto L0
isPrime
L0:
i
L1:
if not t0 goto L2
if statement
i
goto L1
L2:
t4 = 0 == 1
print "Prime"
print "Not a prime"
if not t4 goto L3
print "Prime"
goto L4
L3:
print "Not a prime"
L4:
Final Result Variable: None

Optimized IR Code:
n = 17
isPrime = 1
i = 2
t0 = 2 < 17
t1 = 3
i = t1
t2 = t1 == 0
t3 = 17 % t2
isPrime = 0
if not t3 goto L0
isPrime
L0:
i
L1:
if not t0 goto L2
if statement
i
goto L1
L2:
t4 = 0 == 1
print "Prime"
print "Not a prime"
if not t4 goto L3
print "Prime"
goto L4
L3:
print "Not a prime"
L4:

Target Code (Pseudo-Assembly):
MOV n, 17
MOV isPrime, 1
MOV i, 2
; RELATIONAL: t0 = 2 < 17
MOV t0, 2
MOV t1, 3
MOV i, t1
MOV t2, t1
MOV t3, 17
MOD t3, t2
MOV isPrime, 0
CMP t3, 0
JE L0
; isPrime
L0:
; i
L1:
CMP t0, 0
JE L2
; if statement
; i
JMP L1
L2:
MOV t4, 0
PRINT_STRING Prime
PRINT_STRING Not a prime
CMP t4, 0
JE L2
; if statement
; i
JMP L1
L2:
MOV t4, 0
JE L2
; if statement
; i
JMP L1
L2:
JE L2
; if statement
; i
JMP L1
L2:
MOV t4, 0
PRINT_STRING Prime
PRINT_STRING Not a prime
CMP t4, 0
JE L3
PRINT_STRING Prime
JMP L4
L3:
PRINT_STRING Not a prime
L4:

----------------------------------------